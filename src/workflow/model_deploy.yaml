# PIPELINE DEFINITION
# Name: model-deploy-pipeline
components:
  comp-model-deploy:
    executorLabel: exec-model-deploy
    inputDefinitions:
      parameters:
        bucket_name:
          defaultValue: ''
          description: The name of the GCS bucket where the model artifacts are stored.
          isOptional: true
          parameterType: STRING
deploymentSpec:
  executors:
    exec-model-deploy:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - model_deploy
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.3.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'google-cloud-aiplatform'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef model_deploy(\n    bucket_name: str = \"\",\n):\n    \"\"\"\n\
          \    Deploy a trained model to Vertex AI for serving predictions.\n\n  \
          \  Args:\n        bucket_name (str): The name of the GCS bucket where the\
          \ model artifacts are stored.\n\n    Returns:\n        None\n    \"\"\"\n\
          \    print(\"Model Training Job\")\n\n    import google.cloud.aiplatform\
          \ as aip\n\n    # List of prebuilt containers for prediction\n    # https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers\n\
          \    serving_container_image_uri = (\n        \"us-docker.pkg.dev/vertex-ai/prediction/tf2-cpu.2-12:latest\"\
          \n    )\n\n    display_name = \"Platepals App Model\"\n    ARTIFACT_URI\
          \ = f\"gs://{bucket_name}/model\"\n\n    # Upload and Deploy model to Vertex\
          \ AI\n    # Reference: https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform.Model#google_cloud_aiplatform_Model_upload\n\
          \    deployed_model = aip.Model.upload(\n        display_name=display_name,\n\
          \        artifact_uri=ARTIFACT_URI,\n        serving_container_image_uri=serving_container_image_uri,\n\
          \    )\n    print(\"deployed_model:\", deployed_model)\n    # Reference:\
          \ https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform.Model#google_cloud_aiplatform_Model_deploy\n\
          \    endpoint = deployed_model.deploy(\n        deployed_model_display_name=display_name,\n\
          \        traffic_split={\"0\": 100},\n        machine_type=\"n1-standard-4\"\
          ,\n        accelerator_count=0,\n        min_replica_count=1,\n        max_replica_count=1,\n\
          \        sync=True,\n    )\n    print(\"endpoint:\", endpoint)\n\n"
        image: python:3.10
pipelineInfo:
  name: model-deploy-pipeline
root:
  dag:
    tasks:
      model-deploy:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-deploy
        inputs:
          parameters:
            bucket_name:
              runtimeValue:
                constant: platepals-trainer
        taskInfo:
          name: model-deploy
schemaVersion: 2.1.0
sdkVersion: kfp-2.3.0
